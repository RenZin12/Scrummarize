/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSprintBoardIndexImport } from './routes/_auth/sprint-board/index'
import { Route as AuthProductBacklogIndexImport } from './routes/_auth/product-backlog/index'
import { Route as AuthTeamMemberImport } from './routes/_auth/team/member'
import { Route as AuthTeamAdminImport } from './routes/_auth/team/admin'
import { Route as AuthSprintBoardSprintNewImport } from './routes/_auth/sprint-board/sprint.new'
import { Route as AuthProductBacklogTaskNewImport } from './routes/_auth/product-backlog/task.new'
import { Route as AuthProductBacklogTaskMoveImport } from './routes/_auth/product-backlog/task.move'
import { Route as AuthsprintBacklogSprintBacklogSprintIDImport } from './routes/_auth/(sprint-backlog)/sprint-backlog.$sprintID'
import { Route as AuthSprintBoardSprintViewSprintIDImport } from './routes/_auth/sprint-board/sprint.view.$sprintID'
import { Route as AuthProductBacklogTaskEditTaskIDImport } from './routes/_auth/product-backlog/task.edit.$taskID'
import { Route as AuthsprintBacklogSprintBacklogSprintIDTableImport } from './routes/_auth/(sprint-backlog)/sprint-backlog.$sprintID.table'
import { Route as AuthsprintBacklogSprintBacklogSprintIDKanbanImport } from './routes/_auth/(sprint-backlog)/sprint-backlog.$sprintID.kanban'
import { Route as AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDImport } from './routes/_auth/(sprint-backlog)/sprint-backlog_.$sprintID.task.$taskID'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSprintBoardIndexRoute = AuthSprintBoardIndexImport.update({
  id: '/sprint-board/',
  path: '/sprint-board/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProductBacklogIndexRoute = AuthProductBacklogIndexImport.update({
  id: '/product-backlog/',
  path: '/product-backlog/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTeamMemberRoute = AuthTeamMemberImport.update({
  id: '/team/member',
  path: '/team/member',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTeamAdminRoute = AuthTeamAdminImport.update({
  id: '/team/admin',
  path: '/team/admin',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSprintBoardSprintNewRoute = AuthSprintBoardSprintNewImport.update({
  id: '/sprint-board/sprint/new',
  path: '/sprint-board/sprint/new',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProductBacklogTaskNewRoute = AuthProductBacklogTaskNewImport.update({
  id: '/product-backlog/task/new',
  path: '/product-backlog/task/new',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProductBacklogTaskMoveRoute = AuthProductBacklogTaskMoveImport.update(
  {
    id: '/product-backlog/task/move',
    path: '/product-backlog/task/move',
    getParentRoute: () => AuthRoute,
  } as any,
)

const AuthsprintBacklogSprintBacklogSprintIDRoute =
  AuthsprintBacklogSprintBacklogSprintIDImport.update({
    id: '/(sprint-backlog)/sprint-backlog/$sprintID',
    path: '/sprint-backlog/$sprintID',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthSprintBoardSprintViewSprintIDRoute =
  AuthSprintBoardSprintViewSprintIDImport.update({
    id: '/sprint-board/sprint/view/$sprintID',
    path: '/sprint-board/sprint/view/$sprintID',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthProductBacklogTaskEditTaskIDRoute =
  AuthProductBacklogTaskEditTaskIDImport.update({
    id: '/product-backlog/task/edit/$taskID',
    path: '/product-backlog/task/edit/$taskID',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthsprintBacklogSprintBacklogSprintIDTableRoute =
  AuthsprintBacklogSprintBacklogSprintIDTableImport.update({
    id: '/table',
    path: '/table',
    getParentRoute: () => AuthsprintBacklogSprintBacklogSprintIDRoute,
  } as any)

const AuthsprintBacklogSprintBacklogSprintIDKanbanRoute =
  AuthsprintBacklogSprintBacklogSprintIDKanbanImport.update({
    id: '/kanban',
    path: '/kanban',
    getParentRoute: () => AuthsprintBacklogSprintBacklogSprintIDRoute,
  } as any)

const AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute =
  AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDImport.update({
    id: '/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID',
    path: '/sprint-backlog/$sprintID/task/$taskID',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/team/admin': {
      id: '/_auth/team/admin'
      path: '/team/admin'
      fullPath: '/team/admin'
      preLoaderRoute: typeof AuthTeamAdminImport
      parentRoute: typeof AuthImport
    }
    '/_auth/team/member': {
      id: '/_auth/team/member'
      path: '/team/member'
      fullPath: '/team/member'
      preLoaderRoute: typeof AuthTeamMemberImport
      parentRoute: typeof AuthImport
    }
    '/_auth/product-backlog/': {
      id: '/_auth/product-backlog/'
      path: '/product-backlog'
      fullPath: '/product-backlog'
      preLoaderRoute: typeof AuthProductBacklogIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sprint-board/': {
      id: '/_auth/sprint-board/'
      path: '/sprint-board'
      fullPath: '/sprint-board'
      preLoaderRoute: typeof AuthSprintBoardIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(sprint-backlog)/sprint-backlog/$sprintID': {
      id: '/_auth/(sprint-backlog)/sprint-backlog/$sprintID'
      path: '/sprint-backlog/$sprintID'
      fullPath: '/sprint-backlog/$sprintID'
      preLoaderRoute: typeof AuthsprintBacklogSprintBacklogSprintIDImport
      parentRoute: typeof AuthImport
    }
    '/_auth/product-backlog/task/move': {
      id: '/_auth/product-backlog/task/move'
      path: '/product-backlog/task/move'
      fullPath: '/product-backlog/task/move'
      preLoaderRoute: typeof AuthProductBacklogTaskMoveImport
      parentRoute: typeof AuthImport
    }
    '/_auth/product-backlog/task/new': {
      id: '/_auth/product-backlog/task/new'
      path: '/product-backlog/task/new'
      fullPath: '/product-backlog/task/new'
      preLoaderRoute: typeof AuthProductBacklogTaskNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sprint-board/sprint/new': {
      id: '/_auth/sprint-board/sprint/new'
      path: '/sprint-board/sprint/new'
      fullPath: '/sprint-board/sprint/new'
      preLoaderRoute: typeof AuthSprintBoardSprintNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/kanban': {
      id: '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/kanban'
      path: '/kanban'
      fullPath: '/sprint-backlog/$sprintID/kanban'
      preLoaderRoute: typeof AuthsprintBacklogSprintBacklogSprintIDKanbanImport
      parentRoute: typeof AuthsprintBacklogSprintBacklogSprintIDImport
    }
    '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/table': {
      id: '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/table'
      path: '/table'
      fullPath: '/sprint-backlog/$sprintID/table'
      preLoaderRoute: typeof AuthsprintBacklogSprintBacklogSprintIDTableImport
      parentRoute: typeof AuthsprintBacklogSprintBacklogSprintIDImport
    }
    '/_auth/product-backlog/task/edit/$taskID': {
      id: '/_auth/product-backlog/task/edit/$taskID'
      path: '/product-backlog/task/edit/$taskID'
      fullPath: '/product-backlog/task/edit/$taskID'
      preLoaderRoute: typeof AuthProductBacklogTaskEditTaskIDImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sprint-board/sprint/view/$sprintID': {
      id: '/_auth/sprint-board/sprint/view/$sprintID'
      path: '/sprint-board/sprint/view/$sprintID'
      fullPath: '/sprint-board/sprint/view/$sprintID'
      preLoaderRoute: typeof AuthSprintBoardSprintViewSprintIDImport
      parentRoute: typeof AuthImport
    }
    '/_auth/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID': {
      id: '/_auth/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID'
      path: '/sprint-backlog/$sprintID/task/$taskID'
      fullPath: '/sprint-backlog/$sprintID/task/$taskID'
      preLoaderRoute: typeof AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthsprintBacklogSprintBacklogSprintIDRouteChildren {
  AuthsprintBacklogSprintBacklogSprintIDKanbanRoute: typeof AuthsprintBacklogSprintBacklogSprintIDKanbanRoute
  AuthsprintBacklogSprintBacklogSprintIDTableRoute: typeof AuthsprintBacklogSprintBacklogSprintIDTableRoute
}

const AuthsprintBacklogSprintBacklogSprintIDRouteChildren: AuthsprintBacklogSprintBacklogSprintIDRouteChildren =
  {
    AuthsprintBacklogSprintBacklogSprintIDKanbanRoute:
      AuthsprintBacklogSprintBacklogSprintIDKanbanRoute,
    AuthsprintBacklogSprintBacklogSprintIDTableRoute:
      AuthsprintBacklogSprintBacklogSprintIDTableRoute,
  }

const AuthsprintBacklogSprintBacklogSprintIDRouteWithChildren =
  AuthsprintBacklogSprintBacklogSprintIDRoute._addFileChildren(
    AuthsprintBacklogSprintBacklogSprintIDRouteChildren,
  )

interface AuthRouteChildren {
  AuthTeamAdminRoute: typeof AuthTeamAdminRoute
  AuthTeamMemberRoute: typeof AuthTeamMemberRoute
  AuthProductBacklogIndexRoute: typeof AuthProductBacklogIndexRoute
  AuthSprintBoardIndexRoute: typeof AuthSprintBoardIndexRoute
  AuthsprintBacklogSprintBacklogSprintIDRoute: typeof AuthsprintBacklogSprintBacklogSprintIDRouteWithChildren
  AuthProductBacklogTaskMoveRoute: typeof AuthProductBacklogTaskMoveRoute
  AuthProductBacklogTaskNewRoute: typeof AuthProductBacklogTaskNewRoute
  AuthSprintBoardSprintNewRoute: typeof AuthSprintBoardSprintNewRoute
  AuthProductBacklogTaskEditTaskIDRoute: typeof AuthProductBacklogTaskEditTaskIDRoute
  AuthSprintBoardSprintViewSprintIDRoute: typeof AuthSprintBoardSprintViewSprintIDRoute
  AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute: typeof AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthTeamAdminRoute: AuthTeamAdminRoute,
  AuthTeamMemberRoute: AuthTeamMemberRoute,
  AuthProductBacklogIndexRoute: AuthProductBacklogIndexRoute,
  AuthSprintBoardIndexRoute: AuthSprintBoardIndexRoute,
  AuthsprintBacklogSprintBacklogSprintIDRoute:
    AuthsprintBacklogSprintBacklogSprintIDRouteWithChildren,
  AuthProductBacklogTaskMoveRoute: AuthProductBacklogTaskMoveRoute,
  AuthProductBacklogTaskNewRoute: AuthProductBacklogTaskNewRoute,
  AuthSprintBoardSprintNewRoute: AuthSprintBoardSprintNewRoute,
  AuthProductBacklogTaskEditTaskIDRoute: AuthProductBacklogTaskEditTaskIDRoute,
  AuthSprintBoardSprintViewSprintIDRoute:
    AuthSprintBoardSprintViewSprintIDRoute,
  AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute:
    AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/team/admin': typeof AuthTeamAdminRoute
  '/team/member': typeof AuthTeamMemberRoute
  '/product-backlog': typeof AuthProductBacklogIndexRoute
  '/sprint-board': typeof AuthSprintBoardIndexRoute
  '/sprint-backlog/$sprintID': typeof AuthsprintBacklogSprintBacklogSprintIDRouteWithChildren
  '/product-backlog/task/move': typeof AuthProductBacklogTaskMoveRoute
  '/product-backlog/task/new': typeof AuthProductBacklogTaskNewRoute
  '/sprint-board/sprint/new': typeof AuthSprintBoardSprintNewRoute
  '/sprint-backlog/$sprintID/kanban': typeof AuthsprintBacklogSprintBacklogSprintIDKanbanRoute
  '/sprint-backlog/$sprintID/table': typeof AuthsprintBacklogSprintBacklogSprintIDTableRoute
  '/product-backlog/task/edit/$taskID': typeof AuthProductBacklogTaskEditTaskIDRoute
  '/sprint-board/sprint/view/$sprintID': typeof AuthSprintBoardSprintViewSprintIDRoute
  '/sprint-backlog/$sprintID/task/$taskID': typeof AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/team/admin': typeof AuthTeamAdminRoute
  '/team/member': typeof AuthTeamMemberRoute
  '/product-backlog': typeof AuthProductBacklogIndexRoute
  '/sprint-board': typeof AuthSprintBoardIndexRoute
  '/sprint-backlog/$sprintID': typeof AuthsprintBacklogSprintBacklogSprintIDRouteWithChildren
  '/product-backlog/task/move': typeof AuthProductBacklogTaskMoveRoute
  '/product-backlog/task/new': typeof AuthProductBacklogTaskNewRoute
  '/sprint-board/sprint/new': typeof AuthSprintBoardSprintNewRoute
  '/sprint-backlog/$sprintID/kanban': typeof AuthsprintBacklogSprintBacklogSprintIDKanbanRoute
  '/sprint-backlog/$sprintID/table': typeof AuthsprintBacklogSprintBacklogSprintIDTableRoute
  '/product-backlog/task/edit/$taskID': typeof AuthProductBacklogTaskEditTaskIDRoute
  '/sprint-board/sprint/view/$sprintID': typeof AuthSprintBoardSprintViewSprintIDRoute
  '/sprint-backlog/$sprintID/task/$taskID': typeof AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/team/admin': typeof AuthTeamAdminRoute
  '/_auth/team/member': typeof AuthTeamMemberRoute
  '/_auth/product-backlog/': typeof AuthProductBacklogIndexRoute
  '/_auth/sprint-board/': typeof AuthSprintBoardIndexRoute
  '/_auth/(sprint-backlog)/sprint-backlog/$sprintID': typeof AuthsprintBacklogSprintBacklogSprintIDRouteWithChildren
  '/_auth/product-backlog/task/move': typeof AuthProductBacklogTaskMoveRoute
  '/_auth/product-backlog/task/new': typeof AuthProductBacklogTaskNewRoute
  '/_auth/sprint-board/sprint/new': typeof AuthSprintBoardSprintNewRoute
  '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/kanban': typeof AuthsprintBacklogSprintBacklogSprintIDKanbanRoute
  '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/table': typeof AuthsprintBacklogSprintBacklogSprintIDTableRoute
  '/_auth/product-backlog/task/edit/$taskID': typeof AuthProductBacklogTaskEditTaskIDRoute
  '/_auth/sprint-board/sprint/view/$sprintID': typeof AuthSprintBoardSprintViewSprintIDRoute
  '/_auth/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID': typeof AuthsprintBacklogSprintBacklogSprintIDTaskTaskIDRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/team/admin'
    | '/team/member'
    | '/product-backlog'
    | '/sprint-board'
    | '/sprint-backlog/$sprintID'
    | '/product-backlog/task/move'
    | '/product-backlog/task/new'
    | '/sprint-board/sprint/new'
    | '/sprint-backlog/$sprintID/kanban'
    | '/sprint-backlog/$sprintID/table'
    | '/product-backlog/task/edit/$taskID'
    | '/sprint-board/sprint/view/$sprintID'
    | '/sprint-backlog/$sprintID/task/$taskID'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/team/admin'
    | '/team/member'
    | '/product-backlog'
    | '/sprint-board'
    | '/sprint-backlog/$sprintID'
    | '/product-backlog/task/move'
    | '/product-backlog/task/new'
    | '/sprint-board/sprint/new'
    | '/sprint-backlog/$sprintID/kanban'
    | '/sprint-backlog/$sprintID/table'
    | '/product-backlog/task/edit/$taskID'
    | '/sprint-board/sprint/view/$sprintID'
    | '/sprint-backlog/$sprintID/task/$taskID'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/team/admin'
    | '/_auth/team/member'
    | '/_auth/product-backlog/'
    | '/_auth/sprint-board/'
    | '/_auth/(sprint-backlog)/sprint-backlog/$sprintID'
    | '/_auth/product-backlog/task/move'
    | '/_auth/product-backlog/task/new'
    | '/_auth/sprint-board/sprint/new'
    | '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/kanban'
    | '/_auth/(sprint-backlog)/sprint-backlog/$sprintID/table'
    | '/_auth/product-backlog/task/edit/$taskID'
    | '/_auth/sprint-board/sprint/view/$sprintID'
    | '/_auth/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/team/admin",
        "/_auth/team/member",
        "/_auth/product-backlog/",
        "/_auth/sprint-board/",
        "/_auth/(sprint-backlog)/sprint-backlog/$sprintID",
        "/_auth/product-backlog/task/move",
        "/_auth/product-backlog/task/new",
        "/_auth/sprint-board/sprint/new",
        "/_auth/product-backlog/task/edit/$taskID",
        "/_auth/sprint-board/sprint/view/$sprintID",
        "/_auth/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/team/admin": {
      "filePath": "_auth/team/admin.tsx",
      "parent": "/_auth"
    },
    "/_auth/team/member": {
      "filePath": "_auth/team/member.tsx",
      "parent": "/_auth"
    },
    "/_auth/product-backlog/": {
      "filePath": "_auth/product-backlog/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/sprint-board/": {
      "filePath": "_auth/sprint-board/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/(sprint-backlog)/sprint-backlog/$sprintID": {
      "filePath": "_auth/(sprint-backlog)/sprint-backlog.$sprintID.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/(sprint-backlog)/sprint-backlog/$sprintID/kanban",
        "/_auth/(sprint-backlog)/sprint-backlog/$sprintID/table"
      ]
    },
    "/_auth/product-backlog/task/move": {
      "filePath": "_auth/product-backlog/task.move.tsx",
      "parent": "/_auth"
    },
    "/_auth/product-backlog/task/new": {
      "filePath": "_auth/product-backlog/task.new.tsx",
      "parent": "/_auth"
    },
    "/_auth/sprint-board/sprint/new": {
      "filePath": "_auth/sprint-board/sprint.new.tsx",
      "parent": "/_auth"
    },
    "/_auth/(sprint-backlog)/sprint-backlog/$sprintID/kanban": {
      "filePath": "_auth/(sprint-backlog)/sprint-backlog.$sprintID.kanban.tsx",
      "parent": "/_auth/(sprint-backlog)/sprint-backlog/$sprintID"
    },
    "/_auth/(sprint-backlog)/sprint-backlog/$sprintID/table": {
      "filePath": "_auth/(sprint-backlog)/sprint-backlog.$sprintID.table.tsx",
      "parent": "/_auth/(sprint-backlog)/sprint-backlog/$sprintID"
    },
    "/_auth/product-backlog/task/edit/$taskID": {
      "filePath": "_auth/product-backlog/task.edit.$taskID.tsx",
      "parent": "/_auth"
    },
    "/_auth/sprint-board/sprint/view/$sprintID": {
      "filePath": "_auth/sprint-board/sprint.view.$sprintID.tsx",
      "parent": "/_auth"
    },
    "/_auth/(sprint-backlog)/sprint-backlog_/$sprintID/task/$taskID": {
      "filePath": "_auth/(sprint-backlog)/sprint-backlog_.$sprintID.task.$taskID.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
